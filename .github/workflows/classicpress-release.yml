name: Check for ClassicPress release

on:
  schedule:
    - cron: '0 1 * * *'

jobs:
  release-check:
    runs-on: ubuntu-latest
    steps:
      - name: Check release repository
        run: |
          echo "Collect and process json"
          RELEASE_URL=$(wget -cq "https://api.github.com/repos/ClassyBot/ClassicPress-nightly/releases?per_page=3" -O - | jq -r '.[].html_url' | grep '%2Bnightly\.' | head -n1)
          CURRENT_VERSION=$(echo "${RELEASE_URL}" | sed 's#.*/##; s#%2B.*##; s#-.*##')
          RELEASE_DATE=$(echo "${RELEASE_URL: -8}")
          RELEASE_DATE=
          if [ -z "$CURRENT_VERSION" ] || [ -z "$RELEASE_DATE" ]; then
            echo "Determining release info FAILED!"
            exit 1
          fi
          echo "current_version=${CURRENT_VERSION}" >> $GITHUB_ENV
          echo "release_date=${RELEASE_DATE}" >> $GITHUB_ENV
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Compare to Repository
        run: |
          API_VERSION=$(grep '^\$build_version =' v1/migration/index.php | cut -d\' -f2)
          API_DATE=$(grep '^\$build_date =' v1/migration/index | cut -d\' -f2)
          if [ "${{ env.current_version }}" != "${API_VERSION}" ]; then
            sed -ri "s#^\\\$build_version =.*\$#\$build_version = '${{ env.current_version }}';#" v1/migration/index.php
            sed -ri "s#^\\\$build_date =.*\$#\$build_date = '${{ env.release_date }}';#" v1/migration/index.php
          fi
      - name: Create Pull Request
        id: createpr
        uses: peter-evans/create-pull-request@v3
        with:
          committer: GitHub <noreply@github.com>
          author: ${{ github.actor }} <${{ github.actor }}@users.noreply.github.com>
          branch: release/${{ env.current_version }}
          commit-message: Update API for new ClassicPress Release
          title: Update API for ${{ env.current_version }} release
          body: |
            Update API Endpoint
            - Update endpoint to release ${{ env.current_version }}
            - Update release date to ${{ env.release_date }}
